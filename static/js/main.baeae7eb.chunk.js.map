{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","changeDate","selected","value","onChange","e","target","ExpenseDate","month","date","toLocaleString","year","getFullYear","day","ExpenseItem","title","amount","ExpensesList","filteredExpenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","items","useState","filteredYear","setFilteredYear","filter","toString","selectedYear","ExpenseForm","onSaveExpenseData","stopEditing","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","type","min","step","onClick","NewExpense","onAddExpense","isEditing","setIsEditing","enteredExpenseData","random","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"4ZAGaA,EAAO,SAACC,GACjB,IAAMC,EAAO,eAAWD,EAAME,WAC9B,OAEI,qBAAKA,UAAWD,EAAhB,SAA0BD,EAAMG,YCgBzBC,G,MAnBQ,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAIpC,OACE,qBAAKJ,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQK,MAAOD,EAAUE,SAPD,SAACC,GAC7BJ,EAAWI,EAAEC,OAAOH,QAMhB,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4BCbGI,G,kBAAc,SAACX,GACxB,IAAMY,EAAQZ,EAAMa,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDG,EAAOf,EAAMa,KAAKG,cAClBC,EAAMjB,EAAMa,KAAKC,eAAe,QAAS,CAAEG,IAAK,YAEtD,OACI,sBAAKf,UAAU,eAAf,UACI,qBAAKA,UAAU,sBAAf,SAAsCU,IACtC,qBAAKV,UAAU,oBAAf,SAAoCe,IACpC,qBAAKf,UAAU,qBAAf,SAAqCa,SCPpCG,EAAc,SAAClB,GAE1B,OACE,6BACE,eAAC,EAAD,CAAME,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaW,KAAMb,EAAMa,OAEzB,sBAAKX,UAAU,4BAAf,UACE,6BAAKF,EAAMmB,QACX,sBAAKjB,UAAU,sBAAf,cAAuCF,EAAMoB,mBCV1CC,G,MAAe,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAE3B,OAAgC,IAA5BA,EAAiBC,OACV,oBAAIrB,UAAU,0BAAd,+BAKP,oBAAIA,UAAU,gBAAd,SACKoB,EAAiBE,KAAI,SAAAC,GAAO,OACzB,cAAC,EAAD,CAEIN,MAAOM,EAAQN,MACfN,KAAMY,EAAQZ,KACdO,OAAQK,EAAQL,QAHXK,EAAQC,W,OCbpBC,G,YAAW,SAAC3B,GAErB,IAAI4B,EAAgB,KAKpB,OAHI5B,EAAM6B,SAAW,IACjBD,EAAgBE,KAAKC,MAAO/B,EAAMO,MAAQP,EAAM6B,SAAY,KAAO,KAGnE,sBAAK3B,UAAU,WAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,kBAAkB8B,MAAO,CAAEC,OAAQL,OAEtD,qBAAK1B,UAAU,mBAAf,SAAmCF,EAAMkC,aCVxCC,EAAQ,SAACnC,GAClB,IAAMoC,EAAkBpC,EAAMqC,WAAWb,KAAK,SAAAc,GAAS,OAAIA,EAAU/B,SAC/DgC,EAAeT,KAAKU,IAAL,MAAAV,KAAI,YAAQM,IACjC,OACI,qBAAKlC,UAAU,QAAf,SACKF,EAAMqC,WAAWb,KAAI,SAAAc,GAAS,OAAI,cAAC,EAAD,CAAU/B,MAAO+B,EAAU/B,MAAOsB,SAAUU,EAC3EL,MAAOI,EAAUJ,OACZI,EAAUJ,aCRlBO,EAAgB,SAACzC,GAE1B,IAFoC,EAE9B0C,EAAkB,CACpB,CAAER,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,GACvB,CAAE2B,MAAO,MAAO3B,MAAO,IAdS,cAiBdP,EAAM2C,UAjBQ,IAiBpC,2BAAsC,CAAC,IAA5BlB,EAA2B,QAElCiB,EADqBjB,EAAQZ,KAAK+B,YACJrC,OAASkB,EAAQL,QAnBf,8BAsBpC,OACI,cAAC,EAAD,CAAOiB,WAAYK,KCnBdG,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzB,EAAwCC,mBAAS,QAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAIM3B,EAAmBwB,EAAMI,QAAO,SAAAzB,GACpC,OAAOA,EAAQZ,KAAKG,cAAcmC,aAAeH,KAInD,OACE,eAAC,EAAD,CAAM9C,UAAU,WAAhB,UACE,cAAC,EAAD,CAAgBI,SAAU0C,EAAc3C,WAVhB,SAAC+C,GAC3BH,EAAgBG,MAUd,cAAC,EAAD,CAAeT,SAAUrB,IACzB,cAAC,EAAD,CAAcA,iBAAkBA,Q,OCnBzB+B,G,MAAc,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,kBAAmBC,EAAkB,EAAlBA,YAC/C,EAAwCR,qBAAxC,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAA0CV,qBAA1C,mBAAOW,EAAP,KAAsBC,EAAtB,KACA,EAAsCZ,qBAAtC,mBAAOa,EAAP,KAAoBC,EAApB,KAmDA,OACE,uBAAMC,SAjBc,SAACrD,GACrBA,EAAEsD,iBAEF,IAAMC,EAAc,CAClB7C,MAAOqC,EACPpC,QAASsC,EACT7C,KAAM,IAAIoD,KAAKL,IAGjBN,EAAkBU,GAElBL,EAAiB,IACjBF,EAAgB,IAChBI,EAAe,KAIf,UACE,sBAAK3D,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBACEM,SA7CiB,SAACC,GAC1BgD,EAAgBhD,EAAEC,OAAOH,QA6CjB2D,KAAK,OACL3D,MAAOiD,OAGX,sBAAKtD,UAAU,uBAAf,UACE,2CACA,uBAAOK,MAAOmD,EAAeQ,KAAK,SAASC,IAAK,IAAMC,KAAK,OAAO5D,SA/C9C,SAACC,GAC3BkD,EAAiBlD,EAAEC,OAAOH,aAgDtB,sBAAKL,UAAU,uBAAf,UACE,yCACA,uBAAOK,MAAOqD,EAAaM,KAAK,OAAOC,IAAI,aAAa3B,IAAI,aAAahC,SA3CvD,SAACC,GACzBoD,EAAepD,EAAEC,OAAOH,gBA6CtB,gCACE,wBAAQ2D,KAAK,SAASG,QAASd,EAA/B,oBACA,wBAAQW,KAAK,SAAb,iCC3EKI,G,MAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACzB,EAAkCxB,oBAAS,GAA3C,mBAAOyB,EAAP,KAAkBC,EAAlB,KAiBA,OACI,sBAAKvE,UAAU,cAAf,WACMsE,GAAa,wBAAQH,QATH,WACxBI,GAAa,IAQM,6BACdD,GAAa,cAAC,EAAD,CAAalB,kBAnBJ,SAACoB,GAC5B,IAAMV,EAAW,2BACVU,GADU,IAEbhD,GAAII,KAAK6C,SAASxB,aAEtBoB,EAAaP,GACbS,GAAa,IAa6DlB,YAN1D,WAChBkB,GAAa,WCjBfG,EAAiB,CACrB,CACElD,GAAI,KACJP,MAAO,gBACPN,KAAM,IAAIoD,KAAK,YACf7C,OAAQ,KAEV,CACEM,GAAI,KACJP,MAAO,eACPN,KAAM,IAAIoD,KAAK,YACf7C,OAAQ,KAEV,CACEM,GAAI,KACJP,MAAO,UACPN,KAAM,IAAIoD,KAAK,YACf7C,OAAQ,KAEV,CACEM,GAAI,KACJP,MAAO,iBACPN,KAAM,IAAIoD,KAAK,YACf7C,OAAQ,MA2BGyD,EAvBH,WACV,MAAgC9B,mBAAS6B,GAAzC,mBAAOjC,EAAP,KAAiBmC,EAAjB,KAWA,OACE,gCAEE,cAAC,EAAD,CAAYP,aATU,SAAC9C,GACzBqD,GAAY,SAAAC,GACV,MAAM,CAAEtD,GAAR,mBAAoBkB,UAUpB,cAAC,EAAD,CAAUG,MAAOH,QC3CvBqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.baeae7eb.chunk.js","sourcesContent":["import React from 'react'\nimport './Card.css'\n\nexport const Card = (props) => {\n    const classes = `card ${props.className}`\n    return (\n\n        <div className={classes}>{props.children}</div>\n    )\n}\n","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = ({ changeDate, selected }) => {\n  const dropDownChangeHandler = (e) => {\n    changeDate(e.target.value)\n  }\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={selected} onChange={dropDownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import React from 'react'\nimport './ExpenseDate.css'\n\nexport const ExpenseDate = (props) => {\n    const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n    const year = props.date.getFullYear();\n    const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n\n    return (\n        <div className='expense-date'>\n            <div className='expense-date__month'>{month}</div>\n            <div className='expense-date__day'>{day}</div>\n            <div className='expense-date__year'>{year}</div>\n        </div>\n\n    )\n}\n","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport { ExpenseDate } from \"./ExpenseDate\";\nimport { Card } from \"../UI/Card\";\n\nexport const ExpenseItem = (props) => {\n\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n","import React from 'react'\nimport { ExpenseItem } from './ExpenseItem'\nimport './ExpensesList.css'\n\nexport const ExpensesList = ({ filteredExpenses }) => {\n\n    if (filteredExpenses.length === 0) {\n        return <h2 className='expenses-list__fallback'>\n            Found no expenses\n        </h2>\n    }\n    return (\n        <ul className='expenses-list'>\n            {filteredExpenses.map(expense => (\n                <ExpenseItem\n                    key={expense.id}\n                    title={expense.title}\n                    date={expense.date}\n                    amount={expense.amount}\n                />\n            ))}\n        </ul>\n    )\n}\n","import React from 'react'\nimport './ChartBar.css'\nexport const ChartBar = (props) => {\n\n    let barFillHeight = '0%';\n\n    if (props.maxValue > 0) {\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\n    }\n    return (\n        <div className='char-bar'>\n            <div className='chart-bar__inner'>\n                <div className='chart-bar__fill' style={{ height: barFillHeight }}></div>\n            </div>\n            <div className='chart-bar__label'>{props.label}</div>\n        </div>\n    )\n}\n","import React from 'react'\nimport './Chart.css'\nimport { ChartBar } from './ChartBar'\n\nexport const Chart = (props) => {\n    const dataPointValues = props.dataPoints.map((dataPoint => dataPoint.value))\n    const totalMaximum = Math.max(...dataPointValues);\n    return (\n        <div className='chart'>\n            {props.dataPoints.map(dataPoint => <ChartBar value={dataPoint.value} maxValue={totalMaximum}\n                label={dataPoint.label}\n                key={dataPoint.label}\n            />)}\n        </div>\n    )\n}\n","import React from 'react'\nimport { Chart } from '../Chart/Chart'\n\nexport const ExpensesChart = (props) => {\n\n    const chartDataPoints = [\n        { label: 'Jan', value: 0 },\n        { label: 'Feb', value: 0 },\n        { label: 'Mar', value: 0 },\n        { label: 'Apr', value: 0 },\n        { label: 'May', value: 0 },\n        { label: 'Jun', value: 0 },\n        { label: 'Jul', value: 0 },\n        { label: 'Aug', value: 0 },\n        { label: 'Sep', value: 0 },\n        { label: 'Oct', value: 0 },\n        { label: 'Nov', value: 0 },\n        { label: 'Dec', value: 0 },\n    ]\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth()\n        chartDataPoints[expenseMonth].value += expense.amount\n    }\n\n    return (\n        <Chart dataPoints={chartDataPoints} />\n    )\n}\n","import React, { useState } from \"react\";\nimport { Card } from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\nimport { ExpensesList } from \"./ExpensesList\";\nimport { ExpensesChart } from \"./ExpensesChart\";\n\nexport const Expenses = ({ items }) => {\n\n  const [filteredYear, setFilteredYear] = useState('2022')\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear)\n  }\n  const filteredExpenses = items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  })\n\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter selected={filteredYear} changeDate={filterChangeHandler} />\n      <ExpensesChart expenses={filteredExpenses} />\n      <ExpensesList filteredExpenses={filteredExpenses} />\n    </Card>\n\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nexport const ExpenseForm = ({ onSaveExpenseData, stopEditing }) => {\n  const [enteredTitle, setEnteredTitle] = useState();\n  const [enteredAmount, setEnteredAmount] = useState();\n  const [enteredDate, setEnteredDate] = useState();\n\n  // const [userInput, setUserInput] = useState(\n  //   {\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: '',\n  //   }\n  // )\n\n  // when your state update depends on your previous state, you need to use useState function with prevstate parameter and then make changes\n\n  const titleChangeHandler = (e) => {\n    setEnteredTitle(e.target.value)\n    // setUserInput((prevstate) => { return { ...userInput, enteredTitle: e.target.event, } }\n    // )\n  }\n  const amountChangeHandler = (e) => {\n    setEnteredAmount(e.target.value)\n\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: e.target.event,\n    // })\n  }\n  const dateChangeHandler = (e) => {\n    setEnteredDate(e.target.value)\n\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: e.target.event,\n    // })\n  }\n\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate)\n    }\n\n    onSaveExpenseData(expenseData)\n    // to clear the input fields after submission - two way binding\n    setEnteredAmount('')\n    setEnteredTitle('')\n    setEnteredDate('')\n\n  }\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            onChange={titleChangeHandler}\n            type=\"text\"\n            value={enteredTitle}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input value={enteredAmount} type=\"number\" min={0.01} step=\"0.01\" onChange={amountChangeHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input value={enteredDate} type=\"date\" min=\"2019/01/01\" max=\"2022/12/31\" onChange={dateChangeHandler} />\n        </div>\n      </div>\n      <div>\n        <button type=\"button\" onClick={stopEditing}>Cancel</button>\n        <button type=\"submit\">Add expense</button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react'\nimport { ExpenseForm } from './ExpenseForm'\nimport './NewExpense.css'\n\nexport const NewExpense = ({ onAddExpense }) => {\n    const [isEditing, setIsEditing] = useState(false)\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString(),\n        }\n        onAddExpense(expenseData)\n        setIsEditing(false)\n    }\n\n    const startEditingHandler = () => {\n        setIsEditing(true)\n    }\n\n    const stopEditing = () => {\n        setIsEditing(false)\n    }\n    return (\n        <div className='new-expense'>\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n            {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} stopEditing={stopEditing} />}\n        </div>\n    )\n}\n","import React, { useState } from 'react'; // You can simply import this in all the files with JSX code just so that you remember what happens behind the hood \nimport { Expenses } from './components/Expenses/Expenses';\nimport { NewExpense } from './components/NewExpense/NewExpense';\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Car insurance',\n    date: new Date('2022/4/5'),\n    amount: 450,\n  },\n  {\n    id: 'e2',\n    title: 'Toilet paper',\n    date: new Date('2020/5/6'),\n    amount: 450,\n  },\n  {\n    id: 'e3',\n    title: 'Car fun',\n    date: new Date('2019/9/4'),\n    amount: 450,\n  },\n  {\n    id: 'e4',\n    title: 'food insurance',\n    date: new Date('2022/1/2'),\n    amount: 450,\n  },\n\n]\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n  // here our state is depending on the previous state as well\n  // meaning we want some data already displayed on the expenses list\n  // so initiall the state value is the static dummy data and we depend on this data as well\n  // instead of doing setExpenses[expense, ...expenses], we do the following\n  const addExpenseHandler = (expense) => {\n    setExpenses(prevExpenses => {\n      return [expense, ...expenses]\n    })\n  }\n\n  return (\n    <div>\n      {/* taking in the form data */}\n      <NewExpense onAddExpense={addExpenseHandler} />\n\n      {/* displaying the received data */}\n      <Expenses items={expenses} />\n    </div>\n\n  )\n}\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}